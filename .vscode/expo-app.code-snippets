{
  // Place your expo-app workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  //   "scope": "javascript,typescript",
  //   "prefix": "log",
  //   "body": ["console.log('$1');", "$2"],
  //   "description": "Log output to console"
  // },

  "Create Layout from Custom Snippets": {
    "scope": "javascript,typescript",
    "prefix": "layout",
    "body": [
      "import { ${1:Tabs} } from 'expo-router';",
      "import React from 'react';",
      "",
      "${2:import { TabBarIcon } from '@/components/navigation/TabBarIcon';}",
      "import { Colors } from '@/constants/Colors';",
      "import { useColorScheme } from '@/hooks/useColorScheme';",
      "",
      "export default function ${3:TabLayout}() {",
      "\tconst colorScheme = useColorScheme();",
      "",
      "\treturn (",
      "\t\t<${4:Tabs}",
      "\t\t\tscreenOptions={{",
      "\t\t\t\ttabBarActiveTintColor: Colors[colorScheme ?? 'light'].tint,",
      "\t\t\t\theaderShown: false,",
      "\t\t\t}}>",
      "\t\t\t<${5:Tabs}.Screen",
      "\t\t\t\tname='${6:index}'",
      "\t\t\t\toptions={{",
      "\t\t\t\t\ttitle: '${7:Home}',",
      "\t\t\t\t\ttabBarIcon: ({ color, focused }) => (",
      "\t\t\t\t\t\t<TabBarIcon name={focused ? 'home' : 'home-outline'} color={color} />",
      "\t\t\t\t\t),",
      "\t\t\t\t}}",
      "\t\t\t/>",
      "\t);",
      "}"
    ],
    "description": "Create Layout from Custom Snippets"
  }
}
